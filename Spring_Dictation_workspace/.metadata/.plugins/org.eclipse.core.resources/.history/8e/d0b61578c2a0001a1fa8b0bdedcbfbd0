package com.dictation.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.dictation.service.BoardService;
import com.dictation.service.Term_cdService;
import com.dictation.vo.BoardVO;
import com.dictation.vo.Term_cdVO;
import com.dictation.vo.UserVO;


@CrossOrigin("*")
@RestController
@RequestMapping(value="/api/board")
public class BoardController {
	
	@Autowired
	private BoardService boardService;
	private Term_cdService term_cdService;
	
	//year, term, lecture_no, no, seq_no은 백앤드에서 저장(나머지는 프론트엔드에서 값 받아옴)
    //insert user
	@PostMapping(produces = "application/json;charset=UTF-8")
	public void execWrite(@RequestBody BoardVO board, HttpServletRequest request) {
		
		//year, term
		Term_cdVO term = term_cdService.yearTerm();
		board.setYear(term.getYear());
		board.setTerm(term.getTerm());

		//lecture_no테이블은 세션값에서 lecture_no을 가져와서 저장
		//HttpSession session = request.getSession();
		//board.setLecture_no((int)session.getAttribute("lecture_no"));
		System.out.println("year값은 ? "+ board.getYear());
		System.out.println("term값은 ? " +board.getTerm());
		
		boardService.insert(board);
	}


      //according to id delete
	@GetMapping(value="/delete/{seq_no}")
	public void delete(@PathVariable("seq_no") String seq_no) {
		boardService.delete(seq_no);
	}
	//modify
	//seq_no는 같아야 함
	@PostMapping(value="/update")
	public void update(@RequestBody BoardVO board) {
		boardService.update(board);
	}

	//according to id Query students
	@GetMapping(value="/get/{seq_no}")
	public BoardVO getById(@PathVariable("seq_no") String seq_no) {
		BoardVO board = boardService.getById(seq_no);
		return board;
	}
	
	//All queries
	@PostMapping(value="/list")
	public List<BoardVO> list(){
		return boardService.list();
	}
	
}
