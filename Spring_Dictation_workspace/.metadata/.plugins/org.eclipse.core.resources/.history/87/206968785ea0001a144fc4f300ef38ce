package com.dictation.controller;

import java.util.List;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.servlet.ModelAndView;

import com.dictation.service.UserService;
import com.dictation.vo.UserVO;

@CrossOrigin("*")
@RestController

@SessionAttributes("user") //컨트롤러에서 @SessionAttributes를 지정합니다.


@RequestMapping(value="/api/user")
public class UserController {
	
	@Autowired
	private UserService userService;
	
	
    //insert user
	@PostMapping(produces = "application/json;charset=UTF-8")
	public void execWrite(@RequestBody UserVO user) {
		userService.insert(user);
	}


      //according to id delete
	@GetMapping(value="/delete/{user_id}")
	public void delete(@PathVariable("user_id") String user_id) {
		userService.delete(user_id);
	}
	//modify
	//user_id는 같아야 함
	@PostMapping(value="/update")
	public void update(@RequestBody UserVO user) {
		userService.update(user);
	}

	//according to id Query students
	@GetMapping(value="/get/{user_id}")
	public UserVO getById(@PathVariable("user_id") String user_id) {
		UserVO user = userService.getById(user_id);
		return user;
	}
	
	//All queries
	@GetMapping(value="/list")
	public List<UserVO> list(){
		return userService.list();
	}	
	
	@RequestMapping(value = "/test.do")
	public ModelAndView test(HttpServletRequest request) throws Exception {
	        
	    HttpSession session = request.getSession();
	    String name = "세션저장하기";
	    session.setAttribute("user", name);
	    System.out.println("성공할까??");
	    
	    ModelAndView mv = new ModelAndView();
	    mv.setViewName("/test/test");
	    
	    
	    System.out.println(session.getAttribute("user"));
	    //session.getAttribute("저장한 변수 이름");
	 
	    return mv;
	}
	//session.invalidate(); 세션초기화
	
	
	/*
	
	//로그인시 user데이터 세션값 저장하는 코드
	//로그인시 user_id값을 post로 받아와서 이 메소드 매개변수로 넣는다(지금은 test용으로 Get으로 받아옴)
	@GetMapping(value = "/user_value/{user_id}") 
	public String sawonList(@PathVariable("user_id") String user_id, Model model,SessionStatus sessionStatus) throws Exception {

	    //model.addAttribute("user", userService.getById(user_id));
		model.addAttribute("user", "세션value값");
	    
	    System.out.println("세션값 저장후");
	    //sessionStatus.setComplete();
	    //System.out.println("세션값 지운후");
	    String a=@ModelAttribute("user");
	    System.out.println();
	    return "user_id_value";

	}
	
	@GetMapping(value="/list2")
	public void list2(@ModelAttribute("user") String user) {
		System.out.println(user);
	}*/
	
	


}
